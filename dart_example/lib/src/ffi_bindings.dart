// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Auto generated bindings for Dart types
class NativeLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  NativeLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  NativeLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int membrane_cancel_membrane_task(
    ffi.Pointer<ffi.Void> task_handle,
  ) {
    return _membrane_cancel_membrane_task(
      task_handle,
    );
  }

  late final _membrane_cancel_membrane_taskPtr =
      _lookup<ffi.NativeFunction<ffi.Uint8 Function(ffi.Pointer<ffi.Void>)>>(
          'membrane_cancel_membrane_task');
  late final _membrane_cancel_membrane_task = _membrane_cancel_membrane_taskPtr
      .asFunction<int Function(ffi.Pointer<ffi.Void>)>();

  int membrane_free_membrane_vec(
    int len,
    ffi.Pointer<ffi.Void> ptr,
  ) {
    return _membrane_free_membrane_vec(
      len,
      ptr,
    );
  }

  late final _membrane_free_membrane_vecPtr = _lookup<
      ffi.NativeFunction<
          ffi.Uint8 Function(
              ffi.Int64, ffi.Pointer<ffi.Void>)>>('membrane_free_membrane_vec');
  late final _membrane_free_membrane_vec = _membrane_free_membrane_vecPtr
      .asFunction<int Function(int, ffi.Pointer<ffi.Void>)>();

  MembraneResponse membrane_time_current_time(
    int port,
  ) {
    return _membrane_time_current_time(
      port,
    );
  }

  late final _membrane_time_current_timePtr =
      _lookup<ffi.NativeFunction<MembraneResponse Function(ffi.Int64)>>(
          'membrane_time_current_time');
  late final _membrane_time_current_time = _membrane_time_current_timePtr
      .asFunction<MembraneResponse Function(int)>();
}

abstract class MembraneMsgKind {
  static const int ok = 0;
  static const int error = 1;
}

class MembraneResponse extends ffi.Struct {
  @ffi.Uint8()
  external int kind;

  external ffi.Pointer<ffi.Void> data;
}

abstract class MembraneResponseKind {
  static const int data = 0;
  static const int panic = 1;
}
